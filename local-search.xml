<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>README</title>
    <link href="/2024/07/21/README_CN/"/>
    <url>/2024/07/21/README_CN/</url>
    
    <content type="html"><![CDATA[<p>由于网站今日内被多次请求访问，数据已经明显超出正常范围了( ) 目前采用的措施是添加 Cloudflare 的交互式验证请求(√) 今天开始修改了WAF的规则，低风险用户会被要求JS检查(该项目可能会导致在使用浏览器角色切换或者伪装插件时被拦截)，高风险用户会被要求做交互式验证码继续。 </p><p><img src="/img/blog/README/ReportData.png" alt="截止于2024-07-20"></p><p>不过也有一个好消息是看起来CDN已经开始干活了目前国外访问速度基本都在1-2s内加载完整个框架，LightHS 评估网页得分大约75分左右，国内目前靠另外一个解析的CDN，泛域名在中国深圳，主页的背景采用了国内图床代） 一共4MB的图片差不多首次加载也就是3s左右。至于后续访问嘛，那就全靠Cookie咯(逃) 本网站会想办法往你的 Cookie 里写一点奇怪的内容用于保存 Dark | Light 模式的配置以及缓存部分数据用于改善浏览体验。</p>]]></content>
    
    
    <categories>
      
      <category>README</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zh_CN</tag>
      
      <tag>README</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elapsed Timer</title>
    <link href="/2024/07/20/ElapsedTimer_CN/"/>
    <url>/2024/07/20/ElapsedTimer_CN/</url>
    
    <content type="html"><![CDATA[<h1 id="随手写的通过JS实现的计时器"><a href="#随手写的通过JS实现的计时器" class="headerlink" title="随手写的通过JS实现的计时器"></a>随手写的通过JS实现的计时器</h1><p id="time-elapsed"></p><script>    // 计算经过的时间函数：String -> String    const calculateElapsedTime = startDate => {        const start = new Date(startDate);        const now = new Date();        const diff = now - start; // 时间差，单位为毫秒        const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));        const days = Math.floor((diff % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24));        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));        const seconds = Math.floor((diff % (1000 * 60)) / 1000);        return `${years}y ${days}d ${hours}h ${minutes}m ${seconds}s`;    };    // 更新元素内容的函数：HTMLElement -> String -> ()    const updateElement = obj => str => obj.innerHTML = str;    // 页面加载后执行    document.addEventListener("DOMContentLoaded", () => {        const startDate = "2024-07-20T20:34:21";        const timeElapsedElement = document.getElementById("time-elapsed");        // 更新元素内容的函数        const updateTimeElapsed = updateElement(timeElapsedElement);        // 初始化调用，显示初始值        updateTimeElapsed(`实现了=> 时间已经过去了 ${calculateElapsedTime(startDate)}`);        // 1s更新一次显示的时间        setInterval(() => {            updateTimeElapsed(`实现了=> 时间已经过去了 ${calculateElapsedTime(startDate)}`);        }, 1000);    });</script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p id=<span class="hljs-string">&quot;time-elapsed&quot;</span>&gt;&lt;/p&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 计算经过的时间函数：String -&gt; String</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">calculateElapsedTime</span> = startDate =&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;years&#125;</span>y <span class="hljs-subst">$&#123;days&#125;</span>d <span class="hljs-subst">$&#123;hours&#125;</span>h <span class="hljs-subst">$&#123;minutes&#125;</span>m <span class="hljs-subst">$&#123;seconds&#125;</span>s`</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 更新元素内容的函数：HTMLElement -&gt; String -&gt; ()</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">updateElement</span> = obj =&gt; <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span> obj.<span class="hljs-property">innerHTML</span> = str;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 页面加载后执行</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> startDate = <span class="hljs-string">&quot;2024-07-20T20:34:21&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 更新元素内容的函数</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> updateTimeElapsed = <span class="hljs-title function_">updateElement</span>(timeElapsedElement);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 初始化调用，显示初始值</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">updateTimeElapsed</span>(<span class="hljs-string">`时间已经过去了 <span class="hljs-subst">$&#123;calculateElapsedTime(startDate)&#125;</span>`</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 1s更新一次显示的时间</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">updateTimeElapsed</span>(<span class="hljs-string">`时间已经过去了 <span class="hljs-subst">$&#123;calculateElapsedTime(startDate)&#125;</span>`</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;, <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><h3 id="计算时间差"><a href="#计算时间差" class="headerlink" title="计算时间差"></a>计算时间差</h3><p>首先这段JS的本质是一个计算时间差, “calculateElapsedTime” 函数接收一个日期字符串作为参数，这个日期表示计时的开始时间。它首先将这个字符串转换成 Date 对象。然后，通过当前时间与开始时间的差值（以毫秒为单位），计算出经过的年数、天数、小时数、分钟数和秒数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 计算经过的时间函数：String -&gt; String</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">calculateElapsedTime</span> = startDate =&gt; &#123;<br>    <span class="hljs-keyword">const</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);<br>    <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>    <span class="hljs-keyword">const</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span><br><br>    <span class="hljs-keyword">const</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));<br>    <span class="hljs-keyword">const</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));<br>    <span class="hljs-keyword">const</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));<br>    <span class="hljs-keyword">const</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));<br>    <span class="hljs-keyword">const</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;years&#125;</span>y <span class="hljs-subst">$&#123;days&#125;</span>d <span class="hljs-subst">$&#123;hours&#125;</span>h <span class="hljs-subst">$&#123;minutes&#125;</span>m <span class="hljs-subst">$&#123;seconds&#125;</span>s`</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="更新此元素"><a href="#更新此元素" class="headerlink" title="更新此元素"></a>更新此元素</h3><p>更新网页元素内容的实现通过了 updateElement 函数接收一个 HTMLElement 对象，并返回另一个函数，这个返回的函数可以接受一个字符串并将其设置为传入的元素的 innerHTML。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 更新元素内容的函数：HTMLElement -&gt; String -&gt; ()</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">updateElement</span> = obj =&gt; <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span> obj.<span class="hljs-property">innerHTML</span> = str;<br></code></pre></td></tr></table></figure><h3 id="刷新该元素"><a href="#刷新该元素" class="headerlink" title="刷新该元素"></a>刷新该元素</h3><p>最后在页面加载后的执行 DOMContentLoaded 事件中（即所有DOM元素都已加载完成后），代码设置了开始日期 startDate，并获取了页面中的元素。然后，使用 updateElement 函数创建了 updateTimeElapsed 函数，该函数可以更新时间显示。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 页面加载后执行</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> startDate = <span class="hljs-string">&quot;2024-07-20T20:34:21&quot;</span>;<br>    <span class="hljs-keyword">const</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);<br><br>    <span class="hljs-comment">// 更新元素内容的函数</span><br>    <span class="hljs-keyword">const</span> updateTimeElapsed = <span class="hljs-title function_">updateElement</span>(timeElapsedElement);<br><br>    <span class="hljs-comment">// 初始化调用，显示初始值</span><br>    <span class="hljs-title function_">updateTimeElapsed</span>(<span class="hljs-string">`时间已经过去了 <span class="hljs-subst">$&#123;calculateElapsedTime(startDate)&#125;</span>`</span>);<br><br>    <span class="hljs-comment">// 1s更新一次显示的时间</span><br>    <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">updateTimeElapsed</span>(<span class="hljs-string">`时间已经过去了 <span class="hljs-subst">$&#123;calculateElapsedTime(startDate)&#125;</span>`</span>);<br>    &#125;, <span class="hljs-number">1000</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="修正经历"><a href="#修正经历" class="headerlink" title="修正经历"></a>修正经历</h2><h3 id="初版思路"><a href="#初版思路" class="headerlink" title="初版思路"></a>初版思路</h3><p>可以看到这里其实缺少了对于年份的统计，理论上这种方法也适用于时间轴不长的天数统计。但是在 days 的值中如果超过 356(366) 会看起来很奇怪，特别是用于统计网站的运行时间。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p id=<span class="hljs-string">&quot;time-elapsed&quot;</span>&gt;&lt;/p&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">calculateElapsedTime</span>(<span class="hljs-params">startDate</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> days + <span class="hljs-string">&quot;d &quot;</span> + hours + <span class="hljs-string">&quot;h &quot;</span> + minutes + <span class="hljs-string">&quot;m &quot;</span> + seconds + <span class="hljs-string">&quot;s&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> startDate = <span class="hljs-string">&quot;2024-07-13T00:00:00&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        timeElapsedElement.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;网页已运行 &quot;</span> + <span class="hljs-title function_">calculateElapsedTime</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            timeElapsedElement.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;网页已运行 &quot;</span> + <span class="hljs-title function_">calculateElapsedTime</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;, <span class="hljs-number">1000</span>); <span class="hljs-comment">// 每秒更新一次</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="添加年份"><a href="#添加年份" class="headerlink" title="添加年份"></a>添加年份</h3><p>到这里其实代码已经可以跑了，但是似乎某人觉得我写点很烂(Xd)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p id=<span class="hljs-string">&quot;time-elapsed&quot;</span>&gt;&lt;/p&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">calculateElapsedTime</span>(<span class="hljs-params">startDate</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> years + <span class="hljs-string">&quot;y &quot;</span> + days + <span class="hljs-string">&quot;d &quot;</span> + hours + <span class="hljs-string">&quot;h &quot;</span> + minutes + <span class="hljs-string">&quot;m &quot;</span> + seconds + <span class="hljs-string">&quot;s&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> startDate = <span class="hljs-string">&quot;2024-07-03T15:03:00&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        timeElapsedElement.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;网页已运行 &quot;</span> + <span class="hljs-title function_">calculateElapsedTime</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            timeElapsedElement.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;网页已运行 &quot;</span> + <span class="hljs-title function_">calculateElapsedTime</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;, <span class="hljs-number">1000</span>); <span class="hljs-comment">// 每秒更新一次</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="组合函数"><a href="#组合函数" class="headerlink" title="组合函数"></a>组合函数</h3><p>所以这里改用定义一个组合函数(x)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p id=<span class="hljs-string">&quot;time-elapsed&quot;</span>&gt;&lt;/p&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 定义组合函数</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">compose</span> = (<span class="hljs-params">f, g</span>) =&gt; <span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> <span class="hljs-title function_">f</span>(<span class="hljs-title function_">g</span>(x));</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 计算经过的时间</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">calculateElapsedTime</span>(<span class="hljs-params">startDate</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> years + <span class="hljs-string">&quot;y &quot;</span> + days + <span class="hljs-string">&quot;d &quot;</span> + hours + <span class="hljs-string">&quot;h &quot;</span> + minutes + <span class="hljs-string">&quot;m &quot;</span> + seconds + <span class="hljs-string">&quot;s&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 页面加载后执行</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> startDate = <span class="hljs-string">&quot;2024-07-03T15:03:00&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 组合函数，用于更新页面运行时间</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> updateElapsedTime = <span class="hljs-title function_">compose</span>(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            timeElapsedElement.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;网页已运行 &quot;</span> + <span class="hljs-title function_">calculateElapsedTime</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;, <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 初始化调用，显示初始值</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">updateElapsedTime</span>();</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 每秒更新一次显示的时间</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setInterval</span>(updateElapsedTime, <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="规范函数"><a href="#规范函数" class="headerlink" title="规范函数"></a>规范函数</h3><p>u1s1，其实我感觉上面也算某种意义上的”组合函数” 但是为了满足某人的XP，以下使用 f &#x3D;&gt; g &#x3D;&gt; args &#x3D;&gt; f(g(args))</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p id=<span class="hljs-string">&quot;time-elapsed&quot;</span>&gt;&lt;/p&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 定义组合函数</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">compose</span> = f =&gt; <span class="hljs-function"><span class="hljs-params">g</span> =&gt;</span> <span class="hljs-function"><span class="hljs-params">args</span> =&gt;</span> <span class="hljs-title function_">f</span>(<span class="hljs-title function_">g</span>(args));</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 计算经过的时间</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">calculateElapsedTime</span>(<span class="hljs-params">startDate</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> years + <span class="hljs-string">&quot;y &quot;</span> + days + <span class="hljs-string">&quot;d &quot;</span> + hours + <span class="hljs-string">&quot;h &quot;</span> + minutes + <span class="hljs-string">&quot;m &quot;</span> + seconds + <span class="hljs-string">&quot;s&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 页面加载后执行</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> startDate = <span class="hljs-string">&quot;2024-07-03T15:03:00&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 组合函数，用于更新页面运行时间</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> updateElapsedTime = <span class="hljs-title function_">compose</span>(<span class="hljs-function"><span class="hljs-params">timeElapsed</span> =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            timeElapsedElement.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;网页已运行 &quot;</span> + timeElapsed;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)(<span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">calculateElapsedTime</span>(startDate));</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 初始化调用，显示初始值</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">updateElapsedTime</span>();</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 每秒更新一次显示的时间</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setInterval</span>(updateElapsedTime, <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="规范风格"><a href="#规范风格" class="headerlink" title="规范风格"></a>规范风格</h3><p>但是似乎代码的可读性较差，所以可以改成这样：<br>使用 calcuateDate 函数规范为 string -&gt; string 然后更新 element.innerHTML<br>最后 setInterval(() -&gt; (), 1000) 来完成更新。   </p><p>那么顺应的写法应该是：<br>setInterval(() &#x3D;&gt; updateElement(calcuateDate))</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p id=<span class="hljs-string">&quot;time-elapsed&quot;</span>&gt;&lt;/p&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 计算经过的时间函数：String -&gt; String</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">calculateElapsedTime</span> = startDate =&gt; &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> diff = now - start; <span class="hljs-comment">// 时间差，单位为毫秒</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;years&#125;</span>y <span class="hljs-subst">$&#123;days&#125;</span>d <span class="hljs-subst">$&#123;hours&#125;</span>h <span class="hljs-subst">$&#123;minutes&#125;</span>m <span class="hljs-subst">$&#123;seconds&#125;</span>s`</span>;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 更新元素内容的函数：HTMLElement -&gt; String -&gt; ()</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">const</span> <span class="hljs-title function_">updateElement</span> = obj =&gt; <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span> obj.<span class="hljs-property">innerHTML</span> = str;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 页面加载后执行</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> startDate = <span class="hljs-string">&quot;2024-07-03T15:03:00&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> timeElapsedElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;time-elapsed&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 更新元素内容的函数</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> updateTimeElapsed = <span class="hljs-title function_">updateElement</span>(timeElapsedElement);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 初始化调用，显示初始值</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">updateTimeElapsed</span>(<span class="hljs-string">`网页已运行 <span class="hljs-subst">$&#123;calculateElapsedTime(startDate)&#125;</span>`</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 每秒更新一次显示的时间</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">updateTimeElapsed</span>(<span class="hljs-string">`网页已运行 <span class="hljs-subst">$&#123;calculateElapsedTime(startDate)&#125;</span>`</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;, <span class="hljs-number">1000</span>);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>updateElement HTMLElement -&gt; string -&gt; ()<br>updateElement &#x3D; obj &#x3D;&gt; str -&gt; obj.innerHTML &#x3D; str</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">calculateElapsedTime</span> = startDate =&gt; &#123;<br>    <span class="hljs-keyword">const</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(startDate);<br>    <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>    <span class="hljs-keyword">const</span> diff = now - start;<br><br>    <span class="hljs-keyword">const</span> years = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(diff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>));<br>    <span class="hljs-keyword">const</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">365</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>));<br>    <span class="hljs-keyword">const</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>));<br>    <span class="hljs-keyword">const</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span>)) / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>));<br>    <span class="hljs-keyword">const</span> seconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((diff % (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span>)) / <span class="hljs-number">1000</span>);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;years&#125;</span>y <span class="hljs-subst">$&#123;days&#125;</span>d <span class="hljs-subst">$&#123;hours&#125;</span>h <span class="hljs-subst">$&#123;minutes&#125;</span>m <span class="hljs-subst">$&#123;seconds&#125;</span>s`</span>;<br>&#125;;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zh_CN</tag>
      
      <tag>Code</tag>
      
      <tag>Github</tag>
      
      <tag>OpenSource</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TitlePlay HideSeek</title>
    <link href="/2024/07/20/TitlePlay%20HideSeek_CN/"/>
    <url>/2024/07/20/TitlePlay%20HideSeek_CN/</url>
    
    <content type="html"><![CDATA[<h1 id="基于JS实现的交互式标题"><a href="#基于JS实现的交互式标题" class="headerlink" title="基于JS实现的交互式标题"></a>基于JS实现的交互式标题</h1><p>至于实现的效果嘛，看顶上标签页不就知道了嘛</p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitile</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br><span class="hljs-keyword">var</span> titleTime;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(つェ⊂)我藏好了哦~&#x27;</span>;<br>        <span class="hljs-built_in">clearTimeout</span>(titleTime);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(*´∇｀*)被你发现啦~&#x27;</span>;<br>        titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitile</span>;<br>        &#125;, <span class="hljs-number">2100</span>);<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="原理讲解"><a href="#原理讲解" class="headerlink" title="原理讲解"></a>原理讲解</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 存储原始标题</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitile</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br><br><span class="hljs-comment">// 声明一个变量来保存定时器</span><br><span class="hljs-keyword">var</span> titleTime;<br><br><span class="hljs-comment">// 添加一个事件监听器监听可见性变化</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 检查文档是否隐藏</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>        <span class="hljs-comment">// 将标题改为隐藏信息</span><br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(つェ⊂)我藏好了哦~&#x27;</span>;<br>        <span class="hljs-comment">// 清除任何已有的定时器</span><br>        <span class="hljs-built_in">clearTimeout</span>(titleTime);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 将标题改为发现信息</span><br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(*´∇｀*)被你发现啦~&#x27;</span>;<br>        <span class="hljs-comment">// 设置定时器在2.1秒后将标题改回原始标题</span><br>        titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitile</span>;<br>        &#125;, <span class="hljs-number">2100</span>);<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>怎么样，很简便吧 学废了就CV一下就好了 记得别忘了挂着这个JS(√)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script src=<span class="hljs-string">&quot;&lt;%- url_for(&#x27;/js/title.js&#x27;) %&gt;&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zh_CN</tag>
      
      <tag>Code</tag>
      
      <tag>Github</tag>
      
      <tag>OpenSource</tag>
      
      <tag>JavasCript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/2024/07/18/Hello-Hexo_CN/"/>
    <url>/2024/07/18/Hello-Hexo_CN/</url>
    
    <content type="html"><![CDATA[<p>今天开始搭这个奇怪的网站，一方面是某些平台不允许发布奇怪的主观内容(x) 另一方面是给自己找个可以记录生活的地方(√) 以后希望能抽空写点东西吧。之前的内容我会想办法从各大平台中搬过来，也算是补齐一段完整的旅程。今天又是一个新的起点呢!?   </p><p>另外介绍一下吧(√)<br>本网站依赖于Node.js，使用Hexo框架のFluid主题，分布式部署在3个 Github Page 上顺便采用 Cloudflare 作为代理以及全球CDN缓存服务）至于wsm要开验证，那当然是已经被 DDoS 过了哇 (つェ⊂)</p><p id="time-elapsed"></p><script>    // 计算经过的时间函数：String -> String    const calculateElapsedTime = startDate => {        const start = new Date(startDate);        const now = new Date();        const diff = now - start; // 时间差，单位为毫秒        const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));        const days = Math.floor((diff % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24));        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));        const seconds = Math.floor((diff % (1000 * 60)) / 1000);        return `${years}y ${days}d ${hours}h ${minutes}m ${seconds}s`;    };    // 更新元素内容的函数：HTMLElement -> String -> ()    const updateElement = obj => str => obj.innerHTML = str;    // 页面加载后执行    document.addEventListener("DOMContentLoaded", () => {        const startDate = "2024-07-03T15:03:21";        const timeElapsedElement = document.getElementById("time-elapsed");        // 更新元素内容的函数        const updateTimeElapsed = updateElement(timeElapsedElement);        // 初始化调用，显示初始值        updateTimeElapsed(`网页已运行 ${calculateElapsedTime(startDate)}`);        // 1s更新一次显示的时间        setInterval(() => {            updateTimeElapsed(`网页已运行 ${calculateElapsedTime(startDate)}`);        }, 1000);    });</script>]]></content>
    
    
    <categories>
      
      <category>Hello</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Moment</tag>
      
      <tag>zh_CN</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github 2nd</title>
    <link href="/2022/11/22/Github-2nd_CN/"/>
    <url>/2022/11/22/Github-2nd_CN/</url>
    
    <content type="html"><![CDATA[<p><span style="color: yellow;">❗</span>此文件来自过去的时间线   </p><p><img src="/img/blog/Github-2nd/Github-2nd.png" alt="Github 热力图·2022年"></p><p>有点好奇2022年自己都在写些什么内容）没记错的话当时用的应该是Java SE8 &amp; JDK8</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Moment</tag>
      
      <tag>zh_CN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/06/15/Hello-World_CN/"/>
    <url>/2021/06/15/Hello-World_CN/</url>
    
    <content type="html"><![CDATA[<p><span style="color: yellow;">❗</span>此文件来自过去的时间线   </p><p>这应该是我能找到的有记录以来最远的时间线，21年的自己应该很难想象现在的我在干什么）虽然当时的文件不是用 MarkDown 写的，但是从这一天启往后发生的事情我都会用Blog的形式复原。给自己留下一个完整的故事线，那么”今天”就是梦开始的地方。</p><p id="time-elapsed"></p><script>    // 计算经过的时间函数：String -> String    const calculateElapsedTime = startDate => {        const start = new Date(startDate);        const now = new Date();        const diff = now - start; // 时间差，单位为毫秒        const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));        const days = Math.floor((diff % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24));        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));        const seconds = Math.floor((diff % (1000 * 60)) / 1000);        return `${years}y ${days}d ${hours}h ${minutes}m ${seconds}s`;    };    // 更新元素内容的函数：HTMLElement -> String -> ()    const updateElement = obj => str => obj.innerHTML = str;    // 页面加载后执行    document.addEventListener("DOMContentLoaded", () => {        const startDate = "2021-06-15T00:00:00";        const timeElapsedElement = document.getElementById("time-elapsed");        // 更新元素内容的函数        const updateTimeElapsed = updateElement(timeElapsedElement);        // 初始化调用，显示初始值        updateTimeElapsed(`故事已经开始了 ${calculateElapsedTime(startDate)}`);        // 1s更新一次显示的时间        setInterval(() => {            updateTimeElapsed(`故事已经开始了 ${calculateElapsedTime(startDate)}`);        }, 1000);    });</script>]]></content>
    
    
    <categories>
      
      <category>Hello</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Moment</tag>
      
      <tag>zh_CN</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
